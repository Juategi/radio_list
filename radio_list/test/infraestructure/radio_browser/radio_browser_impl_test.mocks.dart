// Mocks generated by Mockito 5.4.4 from annotations
// in radio_list/test/infraestructure/radio_browser/radio_browser_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:typed_data' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i3;
import 'package:radio_list/infraestructure/radio_browser/core/radio_browser_http_service.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [RadioBrowserHtttpService].
///
/// See the documentation for Mockito's code generation for more information.
class MockRadioBrowserHtttpService extends _i1.Mock
    implements _i2.RadioBrowserHtttpService {
  @override
  String get address => (super.noSuchMethod(
        Invocation.getter(#address),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#address),
        ),
        returnValueForMissingStub: _i3.dummyValue<String>(
          this,
          Invocation.getter(#address),
        ),
      ) as String);

  @override
  String get scheme => (super.noSuchMethod(
        Invocation.getter(#scheme),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#scheme),
        ),
        returnValueForMissingStub: _i3.dummyValue<String>(
          this,
          Invocation.getter(#scheme),
        ),
      ) as String);

  @override
  Map<String, String> get headers => (super.noSuchMethod(
        Invocation.getter(#headers),
        returnValue: <String, String>{},
        returnValueForMissingStub: <String, String>{},
      ) as Map<String, String>);

  @override
  _i4.Future<_i5.Uint8List> get(String? path) => (super.noSuchMethod(
        Invocation.method(
          #get,
          [path],
        ),
        returnValue: _i4.Future<_i5.Uint8List>.value(_i5.Uint8List(0)),
        returnValueForMissingStub:
            _i4.Future<_i5.Uint8List>.value(_i5.Uint8List(0)),
      ) as _i4.Future<_i5.Uint8List>);
}
